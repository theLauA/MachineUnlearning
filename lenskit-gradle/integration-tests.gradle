/*
 * LensKit, an open-source toolkit for recommender systems.
 * Copyright 2014-2017 LensKit contributors (see CONTRIBUTORS.md)
 * Copyright 2010-2014 Regents of the University of Minnesota
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
/**
 * Integration tests built with Gradle.
 */

task gradleTests(group: 'verification')
check.dependsOn gradleTests

file('src/it/gradle').eachDir { testDir ->
    def fname = testDir.name
    def tname = fname.replaceAll(/(?:^|-)(.)/) { m -> m[1].toUpperCase() }
    def workDir = file("build/gradle-tests/$fname")

    task("copy$tname", type: Copy) {
        from testDir
        into workDir
        from('src/it/gradle') {
            include '*.gradle'
        }
    }

    task("test$tname", type: GradleBuild) {
        dependsOn ':lenskit-integration-tests:makeTestRepo'
        dependsOn "copy$tname"
        mustRunAfter test, ':lenskit-eval:test'
        inputs.dir testDir
        inputs.dir rootProject.uri('build/lenskit-current-repo')
        outputs.dir workDir

        startParameter.searchUpwards = false
        startParameter.projectProperties = [
                testRepoURI: rootProject.uri("build/lenskit-current-repo"),
                lenskitVersion: project.version
        ]
        dir = workDir
        buildFile = "$workDir/build.gradle"
        tasks = ['check']

        onlyIf {
            !file("$testDir/ignore").exists()
        }
    }

    gradleTests.dependsOn "test$tname"
}
